name: Release Workflow

permissions:
  pull-requests: write
  contents: write
  pages: write
  id-token: write

on:
  workflow_call:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Install Dependencies
        uses: kurocado-studio/styleguide/.github/actions/install@main

      - name: Run Lint Checks
        uses: kurocado-studio/styleguide/.github/actions/lint@main

      - name: Build Assets
        run: ${{ inputs.build-command }}

      - name: Run Semantic Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      - name: Create Release Branch
        if: success() && steps.semantic_release.outputs.nextRelease
        run: |
          VERSION=${{ steps.semantic_release.outputs.nextRelease.version }}
          git checkout -b ${{ inputs.release-branch-prefix }}${VERSION}

      - name: Push Release Branch
        if: success() && steps.semantic_release.outputs.nextRelease
        env:
          PAT: ${{ secrets.PAT_FORCE_PUSH }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${PAT}@github.com/${{ github.repository }}.git
          git push origin ${{ inputs.release-branch-prefix }}${VERSION} --force

      - name: Extract Version from package.json
        id: extract_version
        run: |
          VERSION=$(jq -r .version package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Extract Changelog
        id: changelog
        run: |
          CHANGELOG=$(awk '/^## \[/ {print; exit}' CHANGELOG.md)
          echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT

      - name: Create Pull Request to Main
        if: success() && steps.semantic_release.outputs.nextRelease
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'chore(release): ${{ steps.extract_version.outputs.version }}'
          body: |
            This is an automated pull request for release version `${{ steps.extract_version.outputs.version }}`.

            **Changelog:**
            ```
            ${{ steps.changelog.outputs.changelog }}
            ```
          head: ${{ inputs.release-branch-prefix }}${{ steps.extract_version.outputs.version }}
          base: main
          commit-message: 'chore(release): ${{ steps.extract_version.outputs.version }} [skip ci]'
          labels: ${{ inputs.release-label }}
